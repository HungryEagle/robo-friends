{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","email","name","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qOAceA,EAZF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,KAAKC,EAAO,EAAPA,GACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,eACrB,gCACI,6BAAKD,IACL,4BAAID,WCWLM,EAhBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAQ,cAAC,EAAD,CAERT,GAAIK,EAAOI,GAAGT,GACdD,KAAMM,EAAOI,GAAGV,KAChBD,MAAOO,EAAOI,GAAGX,OAHZW,MAMT,OACI,8BACKH,KCFEI,EAVE,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC3B,OACI,8BACI,uBAAOX,UAAU,mCAAmCY,KAAK,SACzDC,YAAY,gBACZC,SAAUH,OCGPI,G,MARD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAkBC,OAAQ,SAAnE,SACKJ,EAAMK,aCqCJC,E,kDApCX,aAAc,IAAD,8BACT,gBAYJC,eAAgB,SAACC,GACb,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAZzC,EAAKC,MAAM,CACPxB,OAAQ,GACRM,YAAa,IAJR,E,gEAQO,IAAD,OACfmB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAC7BF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACrB,OAAQ6B,S,+BAK/B,IAAD,OACFC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAC,GAC5C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAEpE,OAAIH,KAAKP,MAAMxB,OAAOoC,OAKlB,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcwB,KAAKZ,iBAAiB,uBAC/C,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ8B,SARnB,6C,GAtBGO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACDC,SAASC,eAAe,SAMzBX,M","file":"static/js/main.040b8410.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({email,name,id}) =>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma1 grow bw2 shadow-5'>\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    const cardComponent = robots.map((user,i) =>{\r\n        return (<Card \r\n        key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}/>\r\n        )\r\n    })\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchfield,searchChange})=>{\r\n    return(\r\n        <div>\r\n            <input className='pa3 ba b--greeb bg-lightest-blue' type='search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'1px solid black',height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n        .then(users=>this.setState({robots: users}));      \r\n    }\r\n    onSearchChange= (event)=>{\r\n        this.setState({searchfield: event.target.value}) //important\r\n    }\r\n    render(){\r\n    const filteredRobots = this.state.robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n    })\r\n    if(!this.state.robots.length){\r\n        return <h1>Loading</h1>\r\n    }\r\n    else{\r\n        return(\r\n        <div className='tc'>\r\n            <h1 className='f1'>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/><br></br>\r\n            <Scroll>\r\n                <CardList robots={filteredRobots} />\r\n            </Scroll>\r\n        </div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />\n,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}